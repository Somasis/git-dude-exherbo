#!/bin/bash
#
# git-dude - Git commit notifier
# https://github.com/somasis/git-dude
#
# Copyright (C) 2011-2015 Marcin Kulik <http://ku1ik.com/>
# Copyright (C) 2015 Kylie McClain <somasissounds@gmail.com>
#
# Other contributions from:
#   Alexander von Gluck IV <https://github.com/kallisti5>
#   Anders Olsson <https://github.com/logaritmisk>
#   Daniel Heath <https://github.com/DanielHeath>
#   Eric Jiang <https://github.com/erjiang>
#   Henrik Holmboe <https://github.com/holmboe>
#   Josh Dick <https://github.com/joshdick>
#   Lochlan Bunn <https://github.com/loklaan>
#   Michael Wolf <https://github.com/maw>
#   Rogerio Prado de Jesus <https://github.com/rogeriopradoj>
#   Stefano Ongeri <https://github.com/stelinx>
#   ≈Åukasz Korecki <https://github.com/lukaszkorecki>
#
# Distributed under the GNU General Public License, version 3.0.
#

set -o errexit

dir=$(git config --global dude.default-dir || true)
dir=${dir:-~/.git-dude}

max_jobs=$(git config --global dude.max-jobs || true)
max_jobs=${max_jobs:-3}

notify_command=$(git config --global dude.notify-command || true)

app_name=$(basename $0)

set -e

export LC_ALL=C # make sure git talks english

normal=$'\u000F'
bold=$'\u0002'
underline=$'\u001F'
green=$'\u0003'"03"
purple=$'\u0003'"06"
orange=$'\u0003'"07"
pink=$'\u0003'"13"

set_category() {
    echo "unofficial"
}

interval() {
    #interval=$(git config --global dude.interval || true)
    interval=$(echo {30..120} | tr ' ' '\n' | shuf | head -1)
}

dudenotify() {
    local TITLE="$repo_name/$branch"
    local TYPE="$1"
    local DESC="$@"
    echo "${bold}$TITLE${normal}: $ACTION - $@"
    sleep 2s
}

get_url() {
    type="$1"
    hash="$3"
    case "$2" in
        *git.exherbo.org*)
            echo " - $2/commit/?id=$hash"
            ;;
        *gitlab.com*)
            echo " - $2/commit/$hash"
            ;;
        *gitorious.org*)
            echo " - $2/commit/$hash"
            ;;
        *github.com*)
            local get_url=$(echo "$2" | sed 's/\.git//')
            echo " - $get_url/commit/$hash"
            ;;
    esac
}

say() {
    said=true
    local msg="$@"
    local length=$(echo "$msg" | wc -c)
    [[ "$length" -gt 394 ]] && local msg=$(echo "$msg" | cut -c-394)
    echo "$msg"
    sleep 1s
}

if [[ -d "$1" ]];then
    cd "$1"
else
    cd "$dir"
fi

screensaver() { false; }

#say "started at $(date +'%X %x')."

dir="$PWD"

while true; do
    if ! screensaver; then
        for dir_name in *; do
            jobs=$(jobs | grep ' git' | wc -l)
                {
                    if [[ -d "$dir_name" && $(cd "$dir_name"; git rev-parse --git-dir 2>/dev/null) ]]; then
                        if [[ $(cd "$dir_name"; git config dude.ignore) == true ]]; then
                            continue
                        fi

                        repo_name=$(basename "$dir_name" .git)
                        cd "$dir_name"

                        remote=$(git config dude.remote || true)
                        #echo "Checking \"$repo_name\"..." >&2
                        changes=$(git fetch $(git config dude.fargs) $remote 2>&1 | grep -F -- '->' | sed 's/^ [+*=!-] //')
                        url=$(git config --get remote.origin.url)
                        category=$(set_category)

                        while read -r line; do
                            case $line in
                                *..*)
                                    commit_range=$(echo "$line" | awk '{ print $1 }')
                                    branch_name=$(echo "$line" | awk '{ print $2 }')
                                    commit_messages=$(git log $commit_range --pretty=format:"${category}|${repo_name}:${branch_name}|%h|%aE|%s" | tac)
                                    echo "$commit_messages" |
                                        while read commit_line;do
                                            category=$(echo "$commit_line" | cut -d'|' -f1)
                                            location=$(echo "$commit_line" | cut -d'|' -f2)
                                            hash=$(echo "$commit_line" | cut -d'|' -f3)
                                            author=$(echo "$commit_line" | cut -d'|' -f4 | cut -d'@' -f1)
                                            commit=$(echo "$commit_line" | cut -d'|' -f5-)
                                            say "${bold}${category}${normal}: ${purple}${author}${normal} ${repo_name}:${pink}${branch_name}${normal} $hash - $commit$(get_url commit $url $hash)"
                                        done
                                    ;;
                            esac
                        done <<< "$changes"

                        cd - &>/dev/null
                    fi
                } &

            if [[ "$jobs" -ge "$max_jobs" ]];then
                wait
            fi
        done
    fi
    interval
    sleep "$interval"
done

